{
    "pipes": [],
    "interfaces": [
        {
            "name": "File",
            "id": "interface-File-5b4db469ba71151bbd079379b17288a0eda3e30918597c984532323dd982fe8624e11ba23e27f380ef8613bb27348e05c37f21795c32731d855c04fccb8b011f",
            "file": "src/app/modules/utilities/interfaces/Node.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Node {\r\n  name: string,\r\n  nodes?: Node[],\r\n  isDirectory: boolean,\r\n  expanded: boolean,\r\n  path: string\r\n}\r\n\r\nexport const DEFAULT_NODE: Node = {\r\n  name: \"notes\",\r\n  nodes: [],\r\n  isDirectory: false,\r\n  expanded: false,\r\n  path: \".\"\r\n}\r\n\r\nexport interface FileSystemItem {\r\n  file_name: string,\r\n  is_folder: boolean\r\n}\r\n\r\nexport interface File {\r\n  content: any\r\n}\r\n\r\nexport function mapFileSystemItem2Node(fileSystemItem: FileSystemItem, path?: string): Node {\r\n  return { ...DEFAULT_NODE, name: fileSystemItem.file_name, isDirectory: fileSystemItem.is_folder, path: path?.concat(\"\\\\\",fileSystemItem.file_name) } as Node;\r\n}\r\nexport function mapFileSystemItem2NodeList(fileSystemItem: FileSystemItem[], parent_node?: string): Node[] {\r\n  return fileSystemItem\r\n    .map((item) => mapFileSystemItem2Node(item, parent_node))\r\n    .sort((a, b) => a.name.localeCompare(b.name)).sort((a, b) => Number(b.isDirectory) - Number(a.isDirectory));;\r\n}\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FileSystemItem",
            "id": "interface-FileSystemItem-5b4db469ba71151bbd079379b17288a0eda3e30918597c984532323dd982fe8624e11ba23e27f380ef8613bb27348e05c37f21795c32731d855c04fccb8b011f",
            "file": "src/app/modules/utilities/interfaces/Node.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Node {\r\n  name: string,\r\n  nodes?: Node[],\r\n  isDirectory: boolean,\r\n  expanded: boolean,\r\n  path: string\r\n}\r\n\r\nexport const DEFAULT_NODE: Node = {\r\n  name: \"notes\",\r\n  nodes: [],\r\n  isDirectory: false,\r\n  expanded: false,\r\n  path: \".\"\r\n}\r\n\r\nexport interface FileSystemItem {\r\n  file_name: string,\r\n  is_folder: boolean\r\n}\r\n\r\nexport interface File {\r\n  content: any\r\n}\r\n\r\nexport function mapFileSystemItem2Node(fileSystemItem: FileSystemItem, path?: string): Node {\r\n  return { ...DEFAULT_NODE, name: fileSystemItem.file_name, isDirectory: fileSystemItem.is_folder, path: path?.concat(\"\\\\\",fileSystemItem.file_name) } as Node;\r\n}\r\nexport function mapFileSystemItem2NodeList(fileSystemItem: FileSystemItem[], parent_node?: string): Node[] {\r\n  return fileSystemItem\r\n    .map((item) => mapFileSystemItem2Node(item, parent_node))\r\n    .sort((a, b) => a.name.localeCompare(b.name)).sort((a, b) => Number(b.isDirectory) - Number(a.isDirectory));;\r\n}\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "file_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "is_folder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Node",
            "id": "interface-Node-5b4db469ba71151bbd079379b17288a0eda3e30918597c984532323dd982fe8624e11ba23e27f380ef8613bb27348e05c37f21795c32731d855c04fccb8b011f",
            "file": "src/app/modules/utilities/interfaces/Node.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Node {\r\n  name: string,\r\n  nodes?: Node[],\r\n  isDirectory: boolean,\r\n  expanded: boolean,\r\n  path: string\r\n}\r\n\r\nexport const DEFAULT_NODE: Node = {\r\n  name: \"notes\",\r\n  nodes: [],\r\n  isDirectory: false,\r\n  expanded: false,\r\n  path: \".\"\r\n}\r\n\r\nexport interface FileSystemItem {\r\n  file_name: string,\r\n  is_folder: boolean\r\n}\r\n\r\nexport interface File {\r\n  content: any\r\n}\r\n\r\nexport function mapFileSystemItem2Node(fileSystemItem: FileSystemItem, path?: string): Node {\r\n  return { ...DEFAULT_NODE, name: fileSystemItem.file_name, isDirectory: fileSystemItem.is_folder, path: path?.concat(\"\\\\\",fileSystemItem.file_name) } as Node;\r\n}\r\nexport function mapFileSystemItem2NodeList(fileSystemItem: FileSystemItem[], parent_node?: string): Node[] {\r\n  return fileSystemItem\r\n    .map((item) => mapFileSystemItem2Node(item, parent_node))\r\n    .sort((a, b) => a.name.localeCompare(b.name)).sort((a, b) => Number(b.isDirectory) - Number(a.isDirectory));;\r\n}\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isDirectory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node[]",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "OpenFileEvent",
            "id": "interface-OpenFileEvent-fdf2b1dc42006cf24f8f9e6e76f7dc4681a781861e07fd7606900cdff683e2ff948cef7096d3cb1ab13c0da0af2acc08a4d51b1e5dd50b723cc26a0b31cbb77f",
            "file": "src/app/modules/utilities/interfaces/Events.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OpenFileEvent {\r\n  file_name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface SaveFileEvent {\r\n     path?: string,\r\n     data?: string\r\n}\r\n\r\nexport interface TabChangeEvent {\r\n  path: string | undefined,\r\n  file: string\r\n}",
            "properties": [
                {
                    "name": "file_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SaveFileEvent",
            "id": "interface-SaveFileEvent-fdf2b1dc42006cf24f8f9e6e76f7dc4681a781861e07fd7606900cdff683e2ff948cef7096d3cb1ab13c0da0af2acc08a4d51b1e5dd50b723cc26a0b31cbb77f",
            "file": "src/app/modules/utilities/interfaces/Events.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OpenFileEvent {\r\n  file_name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface SaveFileEvent {\r\n     path?: string,\r\n     data?: string\r\n}\r\n\r\nexport interface TabChangeEvent {\r\n  path: string | undefined,\r\n  file: string\r\n}",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-28c36d2fe860ebff683803ae245b3971ab919d21e535718c47c3ca3fdab6fc99908882e88cb201299b7e8c4260d9adf6c7a3407d2b3e2fef38c3e824b8840d41",
            "file": "src/app/modules/utilities/interfaces/Tab.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tab{\r\n  id: number,\r\n  title: string,\r\n  isClosable: boolean,\r\n  selected: boolean,\r\n  path: string | undefined\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isClosable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TabChangeEvent",
            "id": "interface-TabChangeEvent-fdf2b1dc42006cf24f8f9e6e76f7dc4681a781861e07fd7606900cdff683e2ff948cef7096d3cb1ab13c0da0af2acc08a4d51b1e5dd50b723cc26a0b31cbb77f",
            "file": "src/app/modules/utilities/interfaces/Events.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OpenFileEvent {\r\n  file_name: string;\r\n  path: string;\r\n}\r\n\r\nexport interface SaveFileEvent {\r\n     path?: string,\r\n     data?: string\r\n}\r\n\r\nexport interface TabChangeEvent {\r\n  path: string | undefined,\r\n  file: string\r\n}",
            "properties": [
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "FolderTreeService",
            "id": "injectable-FolderTreeService-978621470f88f51b101b7fb9ca789badccdd96ab56e8f713c2b07cc9ef2827842da92fc367bdad458a2ec4221c4c6fc35f1808cfb9d18773b4c0a1c1aa4b0568",
            "file": "src/app/modules/ui-elements/folder-tree/folder-tree.service.ts",
            "properties": [
                {
                    "name": "BASE_PATH",
                    "defaultValue": "environment.current_directory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ROOT_NAME",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "rootNode",
                    "defaultValue": "new BehaviorSubject<Node>(DEFAULT_NODE)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "workspace",
                    "defaultValue": "new BehaviorSubject<Node[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "expandDirectory",
                    "args": [
                        {
                            "name": "folder",
                            "type": "Node",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "folder",
                            "type": "Node",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialize_Explorer",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.BASE_PATH"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.BASE_PATH",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openDirectory",
                    "args": [
                        {
                            "name": "workspace",
                            "type": "Node[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "workspace",
                            "type": "Node[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { invoke } from '@tauri-apps/api';\r\nimport { DEFAULT_NODE, FileSystemItem, mapFileSystemItem2Node, mapFileSystemItem2NodeList, Node } from '../../utilities/interfaces/Node';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FolderTreeService {\r\n\r\n  workspace = new BehaviorSubject<Node[]>([]);\r\n  rootNode = new BehaviorSubject<Node>(DEFAULT_NODE);\r\n  ROOT_NAME: string = '';\r\n  private BASE_PATH: string = environment.current_directory\r\n\r\n  constructor() { }\r\n\r\n  initialize_Explorer(path: string = this.BASE_PATH) {\r\n    invoke<FileSystemItem[]>(\"read_directory\", { path }).then((directory_items: FileSystemItem[]) => {\r\n      let last_node = directory_items.pop()\r\n      if (last_node) {\r\n        let nodes_list = mapFileSystemItem2NodeList(directory_items, this.BASE_PATH);\r\n        this.rootNode.next({ ...mapFileSystemItem2Node(last_node), expanded: true })\r\n        this.workspace.next(nodes_list)\r\n        this.ROOT_NAME = last_node.file_name;\r\n      }\r\n    });\r\n  }\r\n\r\n  openDirectory(workspace: Node[], index: number) {\r\n    if (!workspace[index].isDirectory)\r\n      return;\r\n\r\n    if (!workspace[index].expanded && !workspace[index].nodes?.length)\r\n      this.expandDirectory(workspace[index]);\r\n    workspace[index].expanded = !workspace[index].expanded\r\n\r\n  }\r\n\r\n  expandDirectory(folder: Node) {\r\n    let path = folder.path;\r\n    invoke<FileSystemItem[]>(\"read_directory\", { path }).then((items: FileSystemItem[]) => {\r\n      items.pop();\r\n      folder.expanded = true;\r\n      folder.nodes = mapFileSystemItem2NodeList(items, folder.path)\r\n    })\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ViewService",
            "id": "injectable-ViewService-4e67dfde6fe424c66003a42f57a60bd1c105dc432c8be8025b602a07b74e5929b2385443cfe095b3f901659ef2b3852414cef5b6fa4a42fe01df86edb21e0c0f",
            "file": "src/app/modules/ui-elements/rusty-view/rusty-vew.service.ts",
            "properties": [
                {
                    "name": "workbook$",
                    "defaultValue": "new BehaviorSubject<string>(\r\n    'This is some default \\n work from an file',\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "readFile",
                    "args": [
                        {
                            "name": "path",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "SaveFileEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSaves the file contents on the choosen directory.\nIf the file is not present then creates the file with the specified name and then stores the content .\nIf the file is present it stores the content in the exsisting file\n",
                    "description": "<p>Saves the file contents on the choosen directory.\nIf the file is not present then creates the file with the specified name and then stores the content .\nIf the file is present it stores the content in the exsisting file</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1309,
                                "end": 1313,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "file"
                            },
                            "type": "SaveFileEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1303,
                                "end": 1308,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { invoke } from '@tauri-apps/api';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SaveFileEvent } from '../../utilities/interfaces/Events';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ViewService {\r\n  workbook$ = new BehaviorSubject<string>(\r\n    'This is some default \\n work from an file',\r\n  );\r\n\r\n  constructor() { }\r\n\r\n  readFile(path: string | undefined ) {\r\n    console.log(\"Reading file with path \", path);\r\n    \r\n    // If path is undefined the return with error log \r\n    if( !path ) console.error(\"Error while opening the file. Path undefined\", path);\r\n\r\n    // Some default values to be retured for current directory path . TODO Needs to verify if this is required or not :( \r\n    if (path == '.') return this.workbook$.next('This is some default \\n work from an file');\r\n\r\n    /**\r\n     * Reads the content of the file from the given path \r\n     */\r\n    invoke<string>('read_file', { path }).then((data: string) => {\r\n      this.workbook$.next(data);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Saves the file contents on the choosen directory.\r\n   * If the file is not present then creates the file with the specified name and then stores the content .\r\n   * If the file is present it stores the content in the exsisting file \r\n   * @param file \r\n   */\r\n  saveFile(file: SaveFileEvent) {\r\n    if (file.data && file.path) {\r\n      invoke<string>('save_file', { path: file.path, data: file.data }).then((res: string) => {\r\n        console.log(\"Response from the backend \", res);\r\n      })\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "AutofocusDirective",
            "id": "directive-AutofocusDirective-91c33ec0a93f41a88fe1ac3e953b558462a71c24e0d1c7adffdc8b408b853a9cc2323236ece4c93d0290523e653b14e7c4b4fe3eef93c3e16a2cea45f129c963",
            "file": "src/app/modules/directives/autofocus/autofocus.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[rustyAutofocus]',\r\n  standalone: true,\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {    \r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n}\r\n",
            "selector": "[rustyAutofocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ResizerDirective",
            "id": "directive-ResizerDirective-b877ff0d06c950f50e033ed334c499ae8f181705cb585691cefff27e9291e85011bdcd47038349412717f9535b355e4d9d3c99ff957d0eb1bd18766d63272b09",
            "file": "src/app/modules/directives/resizer/resizer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[workpadResizer]',\r\n  standalone: true\r\n})\r\nexport class ResizerDirective {\r\n\r\n  @HostListener(\"input\") onTextChange(){\r\n    this.resize(this.el.nativeElement);\r\n  }\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  resize(textArea: HTMLTextAreaElement) {\r\n    textArea.style.height = 'auto'\r\n    textArea.style.height = (textArea.scrollHeight) + 'px';\r\n}\r\n\r\n}\r\n",
            "selector": "[workpadResizer]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onTextChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "resize",
                    "args": [
                        {
                            "name": "textArea",
                            "type": "HTMLTextAreaElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "textArea",
                            "type": "HTMLTextAreaElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-ebbb0f557e91379bc0f0ce55f911748c37f885259979ad9e0ee1aab5a0f71b1219624f012bca74e426388579d452b3f06072ee06179843c1d35e84184a549735",
            "file": "src/app/modules/directives/tooltip/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, EmbeddedViewRef, HostListener, Injector, Input } from '@angular/core';\r\nimport { TooltipComponent } from '../../ui-elements/tooltip/tooltip.component';\r\n\r\n@Directive({\r\n  selector: '[tooltip]',\r\n  standalone: true\r\n})\r\nexport class TooltipDirective {\r\n\r\n  @Input() tooltip:string = '';\r\n\r\n  private componentRef: ComponentRef<any> | null = null;\r\n\r\n  constructor(\r\n\tprivate elementRef: ElementRef,\r\n\tprivate appRef: ApplicationRef,\r\n\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\tprivate injector: Injector) {\r\n  }\r\n//  TODO -> good idea -> making the tooltip open on mousehover on text when we have some selected items \r\n  @HostListener('contextmenu')\r\n  onMouseEnter(): void {\r\n    if (this.componentRef === null) {\r\n        const componentFactory =\r\n              this.componentFactoryResolver.resolveComponentFactory(\r\n              TooltipComponent);\r\n        this.componentRef = componentFactory.create(this.injector);\r\n        this.appRef.attachView(this.componentRef.hostView);\r\n        const domElem =\r\n              (this.componentRef.hostView as EmbeddedViewRef<any>)\r\n              .rootNodes[0] as HTMLElement;\r\n        document.body.appendChild(domElem);\r\n        this.setTooltipComponentProperties();\r\n    }\r\n  }\r\n\r\n  private setTooltipComponentProperties() {\r\n    if (this.componentRef !== null) {\r\n      this.componentRef.instance.tooltip = this.tooltip;\r\n      const {left, right, bottom} =\r\n            this.elementRef.nativeElement.getBoundingClientRect();\r\n      this.componentRef.instance.left = (right - left) / 2 + left;\r\n      this.componentRef.instance.top = bottom;\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  onMouseLeave(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.componentRef !== null) {\r\n      this.appRef.detachView(this.componentRef.hostView);\r\n      this.componentRef.destroy();\r\n      this.componentRef = null;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "selector": "[tooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48
                },
                {
                    "name": "contextmenu",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any> | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'contextmenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setTooltipComponentProperties",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d430f7ce62ca38880296ed26de1236fc07dcfa8c050536b47440e431616e2111a8d7ccd2ac15afccec191d4e685f3e9ce062e3f9ba8faf347ddc329e3916aa41",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { invoke } from '@tauri-apps/api';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n\r\n  \r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-rusty-view ></app-rusty-view>\r\n"
        },
        {
            "name": "FolderComponent",
            "id": "component-FolderComponent-80aedb2ade249813d3e058e316bd4fd36852fa6fc2f9f4403ca083ce4ef617ca57b9107055613a0cd4d6023f8e630872f7ae66fe17ec3536506388a870729ab2",
            "file": "src/app/modules/ui-elements/folder-tree/folder/folder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rusty-folder",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./folder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "folders",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Node[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "openFileEvent",
                    "defaultValue": "new EventEmitter<OpenFileEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "fs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FolderTreeService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFileSystemClick",
                    "args": [
                        {
                            "name": "folders",
                            "type": "Node[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "folders",
                            "type": "Node[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgFor"
                },
                {
                    "name": "NgIf"
                },
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Node } from '../../../utilities/interfaces/Node';\r\nimport { FolderTreeService } from '../folder-tree.service';\r\nimport { OpenFileEvent } from '../../../utilities/interfaces/Events';\r\n\r\n@Component({\r\n  selector: 'rusty-folder',\r\n  standalone: true,\r\n  imports: [NgFor,NgIf,NgClass],\r\n  host: {\r\n    '[style.list-style-type]': \"none\"\r\n  },\r\n  templateUrl: './folder.component.html',\r\n  styleUrl: './folder.component.scss'\r\n})\r\nexport class FolderComponent {\r\n\r\n  @Input() folders!:Node[];\r\n\r\n  @Output() openFileEvent = new EventEmitter<OpenFileEvent>()\r\n\r\n  constructor(public fs:FolderTreeService){\r\n  }\r\n\r\n  handleFileSystemClick(folders: Node[], index: number) {\r\n    if (folders[index].isDirectory)\r\n      this.fs.openDirectory(folders, index);\r\n    else\r\n      this.openFileEvent.emit({\r\n        file_name: folders[index].name,\r\n        path: folders[index].path,\r\n      });\r\n  }\r\n}\r\n",
            "styleUrl": "./folder.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fs",
                        "type": "FolderTreeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "fs",
                        "type": "FolderTreeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<li class=\"py-1 item\" *ngFor=\"let folder of folders;index as i\">\r\n  <span (click)=\"this.handleFileSystemClick(folders, i)\" class=\"flex items-center\" [ngClass]=\"folder.isDirectory ? '' : 'ml-1 mt-1'\">\r\n    <i style=\"font-size: 12px; align-content: end; margin-right: 3px;\" *ngIf=\"folder.isDirectory\" class=\"pi\" [ngClass]=\"\r\n    folder.expanded ? 'pi-angle-down' : 'pi-angle-right'\r\n  \"></i> {{folder.name}}\r\n  </span>\r\n  <ul style=\"padding-left: .7rem;\">\r\n    <rusty-folder *ngIf=\"folder.nodes && folder.expanded\" [folders]=\"folder.nodes\" />\r\n  </ul>\r\n</li>\r\n"
        },
        {
            "name": "FolderTreeComponent",
            "id": "component-FolderTreeComponent-4d30a2a30f84ff3b2a63a1ee1babf93e6ddc5ac8a944164259fd1aa7469835b2e66cecc66f5d4a1a3e832dd933705457b61b7e2a06fe5d0cb0dc590ed5eccaba",
            "file": "src/app/modules/ui-elements/folder-tree/folder-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rusty-folder-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./folder-tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "openFileEvent",
                    "defaultValue": "new EventEmitter<OpenFileEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "fsService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FolderTreeService",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "root",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "root$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "workspace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "workspace$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "handleFileSystemClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleNestedFileOpenEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "OpenFileEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "OpenFileEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "NgFor"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "FolderComponent",
                    "type": "component"
                },
                {
                    "name": "UpperCasePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass, NgFor, NgIf, UpperCasePipe } from '@angular/common';\r\nimport { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\r\nimport { FolderComponent } from './folder/folder.component';\r\nimport { FolderTreeService } from './folder-tree.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Node } from '../../utilities/interfaces/Node';\r\nimport { OpenFileEvent } from '../../utilities/interfaces/Events';\r\n\r\n@Component({\r\n  selector: 'rusty-folder-tree',\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FolderComponent, UpperCasePipe],\r\n  templateUrl: './folder-tree.component.html',\r\n  styleUrl: './folder-tree.component.scss',\r\n})\r\nexport class FolderTreeComponent implements OnDestroy {\r\n\r\n  @Output() openFileEvent = new EventEmitter<OpenFileEvent>();\r\n  workspace!: Node[];\r\n  workspace$!: Subscription;\r\n\r\n  root!: Node;\r\n  root$!: Subscription;\r\n\r\n  constructor(public fsService: FolderTreeService) {\r\n    this.workspace$ = this.fsService.workspace.subscribe((ele: Node[]) => {\r\n      this.workspace = ele;\r\n    });\r\n    this.root$ = this.fsService.rootNode.subscribe((ele: Node) => {\r\n      this.root = ele;\r\n    });\r\n    this.fsService.initialize_Explorer();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.workspace$.unsubscribe();\r\n    this.root$.unsubscribe();\r\n  }\r\n\r\n  handleFileSystemClick(index: number) {\r\n    if (this.workspace[index].isDirectory)\r\n      this.fsService.openDirectory(this.workspace, index);\r\n    else\r\n      this.openFileEvent.emit({\r\n        file_name: this.workspace[index].name,\r\n        path: this.workspace[index].path,\r\n      });\r\n  }\r\n\r\n  handleNestedFileOpenEvent(event: OpenFileEvent) {\r\n    console.log(\"this got called \", event);\r\n    \r\n    this.openFileEvent.emit(event);\r\n  }\r\n}\r\n",
            "styleUrl": "./folder-tree.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fsService",
                        "type": "FolderTreeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "fsService",
                        "type": "FolderTreeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<ul class=\"my-0\" style=\"padding: 2px 0px 0px 3px;\">\r\n  <li class=\"py-1\">\r\n    <span (click)=\"root.expanded = !root.expanded\" class=\"flex items-center item\" style=\"font-weight: 500;\">\r\n      <i  style=\"font-size: 12px; align-content: end; margin-right: 3px;\" class=\"pi\"\r\n        [ngClass]=\"root.expanded ? 'pi-angle-down' : 'pi-angle-right'\"></i>\r\n      {{ root.name | uppercase}}\r\n    </span>\r\n\r\n    <ul *ngIf=\"root.expanded\" style=\"padding-left: .7rem;\">\r\n      <li class=\"py-1 item\" *ngFor=\"let fileSystemItem of workspace; index as i\">\r\n        <span (click)=\"this.handleFileSystemClick(i)\" class=\"flex items-center \"\r\n          [ngClass]=\"fileSystemItem.isDirectory ? '' : 'ml-2'\">\r\n          <i style=\"font-size: 12px; align-content: end; margin-right: 3px;\" *ngIf=\"fileSystemItem.isDirectory\" class=\"pi\" [ngClass]=\"\r\n              fileSystemItem.expanded ? 'pi-angle-down' : 'pi-angle-right'\r\n            \"></i>\r\n          {{ fileSystemItem.name }}\r\n        </span>\r\n        <ul *ngIf=\"fileSystemItem.expanded\" style=\"padding-left: .7rem;\">\r\n          <rusty-folder (openFileEvent)=\"handleNestedFileOpenEvent($event)\" *ngIf=\"fileSystemItem.nodes\" [folders]=\"fileSystemItem.nodes\" />\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n"
        },
        {
            "name": "HorizontalBarComponent",
            "id": "component-HorizontalBarComponent-275481caf51eda8750c4c686c6a57df06c1684422cba1a7fe64d29beb4c0b1172a7b23c4290b2d7893e8451719351062b9170a76faf8a463f71f5d0b84c6b588",
            "file": "src/app/modules/ui-elements/horizontal-bar/horizontal-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-horizontal-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./horizontal-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-horizontal-bar',\r\n  templateUrl: './horizontal-bar.component.html',\r\n  styleUrl: './horizontal-bar.component.scss',\r\n  standalone: true,\r\n  imports: []\r\n})\r\nexport class HorizontalBarComponent {\r\n\r\n}\r\n",
            "styleUrl": "./horizontal-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"h-2rem w-full px-2\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n  <div class=\"inline-flex\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <p class=\"break-line\"></p>\r\n</div>\r\n"
        },
        {
            "name": "RustyViewComponent",
            "id": "component-RustyViewComponent-2a9ac73c8a1004a7db3647808cac38dfd5328e086cb20001176ef07438a80559e4f3eef4791673aa52659c28d47d5f8c563ecae94b63003cedfb18b54d1c2784",
            "file": "src/app/modules/ui-elements/rusty-view/rusty-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rusty-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./rusty-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentFileName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "currentWorkingDirectory",
                    "defaultValue": "environment.current_directory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "workfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "workfilePath",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "workFileSubs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "saveCurrentFile",
                    "args": [
                        {
                            "name": "event",
                            "type": "SaveFileEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SaveFileEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateWorkpad",
                    "args": [
                        {
                            "name": "tabChangeEvent",
                            "type": "TabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabChangeEvent",
                            "type": "TabChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TabsComponent",
                    "type": "component"
                },
                {
                    "name": "WorkpadComponent",
                    "type": "component"
                },
                {
                    "name": "SplitterComponent",
                    "type": "component"
                },
                {
                    "name": "FolderTreeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { TabsComponent } from '../tabs/tabs.component';\r\nimport { WorkpadComponent } from '../workpad/workpad.component';\r\nimport { SplitterComponent } from '../splitter/splitter.component';\r\nimport { FolderTreeComponent } from '../folder-tree/folder-tree.component';\r\nimport { ViewService } from './rusty-vew.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SaveFileEvent, TabChangeEvent } from '../../utilities/interfaces/Events';\r\nimport { save } from '@tauri-apps/api/dialog';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-rusty-view',\r\n  templateUrl: './rusty-view.component.html',\r\n  styleUrl: './rusty-view.component.scss',\r\n  standalone: true,\r\n  imports: [\r\n    TabsComponent,\r\n    WorkpadComponent,\r\n    SplitterComponent,\r\n    FolderTreeComponent,\r\n  ],\r\n})\r\nexport class RustyViewComponent {\r\n  workfile!: string;\r\n  workFileSubs: Subscription;\r\n  workfilePath: string | undefined = undefined;\r\n  currentWorkingDirectory: string = environment.current_directory;\r\n  currentFileName:string = \"\";\r\n\r\n  constructor(private viewService: ViewService) {\r\n    this.workFileSubs = this.viewService.workbook$.subscribe((data) => {\r\n      this.workfile = data;\r\n    });\r\n  }\r\n\r\n  updateWorkpad(tabChangeEvent: TabChangeEvent) {\r\n    this.workfilePath = tabChangeEvent.path;\r\n    this.currentFileName = tabChangeEvent.file;\r\n    this.viewService.readFile(tabChangeEvent.path);\r\n  }\r\n\r\n  saveCurrentFile(event: SaveFileEvent) {\r\n    /**\r\n     * If current workfile path is not present , then open save dialog on save event \r\n     */\r\n    if (!this.workfilePath) {\r\n      save({ defaultPath: this.currentWorkingDirectory, title: \"Save As\"})\r\n        .then((saveFilePath) => {\r\n          console.log(\"save file path \", saveFilePath);\r\n          if (saveFilePath) {\r\n            this.workfilePath = saveFilePath;\r\n            this.viewService.saveFile({ ...event, path: saveFilePath as string } as SaveFileEvent);\r\n          }\r\n        })\r\n    }\r\n    else {\r\n      this.viewService.saveFile({ ...event, path: this.workfilePath } as SaveFileEvent);\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./rusty-view.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewService",
                        "type": "ViewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "viewService",
                        "type": "ViewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"layout h-full\">\r\n  <!--  Add a Folders option on left side  -->\r\n  <app-splitter class=\"h-full\">\r\n    <div >\r\n      <rusty-folder-tree (openFileEvent)=\"tabs.newTab($event)\"></rusty-folder-tree>\r\n    </div>\r\n    <app-tabs #tabs panel2 (activeTabChangeEvent)=\"updateWorkpad($event)\"></app-tabs>\r\n    <app-workpad panel2 (saveFileEvent)=\"saveCurrentFile($event)\" [contentFromFile]=\"workfile\"></app-workpad>\r\n\r\n  </app-splitter>\r\n</div>\r\n"
        },
        {
            "name": "SplitterComponent",
            "id": "component-SplitterComponent-dc07d1d75893a3e814011a0bc891a1079bc4d76c9ac9ffac58d33d143098bad9d808bed00968a8824ba7fcfe33f7b11aa162579afa31d77bc859c34f25536afb",
            "file": "src/app/modules/ui-elements/splitter/splitter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./splitter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SplitterModule",
                    "type": "module"
                },
                {
                    "name": "ScrollPanelModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SplitterModule } from 'primeng/splitter';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\n\r\n@Component({\r\n  selector: 'app-splitter',\r\n  templateUrl: './splitter.component.html',\r\n  styleUrl: './splitter.component.scss',\r\n  standalone: true,\r\n  imports: [SplitterModule, ScrollPanelModule]\r\n})\r\nexport class SplitterComponent {\r\n}\r\n",
            "styleUrl": "./splitter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-splitter\r\n    [panelSizes]=\"[25, 75]\"\r\n    [minSizes]=\"[1, 20]\"\r\n    [style]=\"{ border: 'none', height: '100%' }\"\r\n    styleClass=\"mb-5\">\r\n    <ng-template pTemplate>\r\n      <p-scrollPanel class=\"w-full\" [style]=\"{ height: '100%', backgroundColor:'var(--surface-dark-secondary)' }\" styleClass=\"custombar1\">\r\n        <ng-content ></ng-content>\r\n      </p-scrollPanel>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate>\r\n        <div [style]=\"{padding:'var(--padding-xs)'}\" class=\"col \">\r\n           <ng-content select=\"[panel2]\"></ng-content>\r\n        </div>\r\n    </ng-template>\r\n</p-splitter>\r\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-db7c8251159162571683399dcc01e692e762223fc29c72ca53e2b674ba7eac8f228169eedb177c0932432a8aac69e2c85f5329900a4333d5c30d4429ce90aff6",
            "file": "src/app/modules/ui-elements/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis takes a list of tabs from the service which reads all the files\n",
                    "description": "<p>This takes a list of tabs from the service which reads all the files</p>\n",
                    "line": 33,
                    "type": "Tab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeTabChangeEvent",
                    "defaultValue": "new EventEmitter<TabChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>This is use to toggle active tab on Ctrl + Tab event</p>\n",
                    "line": 28,
                    "rawdescription": "\n\nThis is use to toggle active tab on Ctrl + Tab event\n",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSwitch to next Tab on control + tab event\n",
                    "description": "<p>Switch to next Tab on control + tab event</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.control.tab'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "createBlankTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.control.N'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "newTab",
                    "args": [
                        {
                            "name": "tabEvent",
                            "type": "OpenFileEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNew Tab on Ctrl + N\n",
                    "description": "<p>New Tab on Ctrl + N</p>\n",
                    "jsdoctags": [
                        {
                            "name": "tabEvent",
                            "type": "OpenFileEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "triggerTabChangeEvent",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown.control.N",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72
                },
                {
                    "name": "document:keydown.control.tab",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSwitch to next Tab on control + tab event\n",
                    "description": "<p>Switch to next Tab on control + tab event</p>\n",
                    "line": 46
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TabViewModule",
                    "type": "module"
                },
                {
                    "name": "WorkpadComponent",
                    "type": "component"
                },
                {
                    "name": "NgFor"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CommonModule, NgFor } from '@angular/common';\r\nimport { WorkpadComponent } from '../workpad/workpad.component';\r\nimport { Tab } from '../../utilities/interfaces/Tab';\r\nimport { NEW_TAB_DEFAULT } from '../../utilities/Constants';\r\nimport { OpenFileEvent, TabChangeEvent } from '../../utilities/interfaces/Events';\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrl: './tabs.component.scss',\r\n  standalone: true,\r\n  imports: [CommonModule, TabViewModule, WorkpadComponent, NgFor],\r\n})\r\nexport class TabsComponent implements OnInit{\r\n  @Output() activeTabChangeEvent = new EventEmitter<TabChangeEvent>();\r\n\r\n  /**\r\n   * This is use to toggle active tab on Ctrl + Tab event\r\n   */\r\n  public activeIndex: number = 0;\r\n\r\n  /**\r\n   * This takes a list of tabs from the service which reads all the files\r\n   */\r\n  @Input('tabs') tabs: Tab[] = []; \r\n\r\n  ngOnInit(): void {\r\n    if(this.tabs.length == 0){\r\n      this.tabs.push({...NEW_TAB_DEFAULT, id:0})\r\n      this.activeIndex = 0;\r\n      this.tabs[0].selected = true\r\n    }\r\n  }\r\n  /**\r\n   * Switch to next Tab on control + tab event\r\n   */\r\n  @HostListener('document:keydown.control.tab')\r\n  changeTab() {\r\n    this.activeIndex = (this.activeIndex + 1) % this.tabs.length;\r\n    this.triggerTabChangeEvent(this.activeIndex);\r\n  }\r\n\r\n  /**\r\n   * New Tab on Ctrl + N\r\n   */\r\n  newTab(tabEvent: OpenFileEvent) {\r\n    if (!tabEvent.file_name) this.createBlankTab();\r\n    if (!tabEvent.path) this.createBlankTab();\r\n\r\n    let newTab: Tab = {\r\n      ...NEW_TAB_DEFAULT,\r\n      id: this.tabs.length,\r\n      title: tabEvent.file_name,\r\n      path: tabEvent.path,\r\n    };\r\n\r\n    this.tabs.push(newTab);\r\n    this.tabs[this.activeIndex].selected = false;\r\n    this.activeIndex = newTab.id;\r\n    this.triggerTabChangeEvent(this.activeIndex);\r\n  }\r\n\r\n  @HostListener('document:keydown.control.N')\r\n  createBlankTab() {\r\n    let newTab: Tab = { ...NEW_TAB_DEFAULT, id: this.tabs.length };\r\n    this.tabs.push(newTab);\r\n    this.tabs[this.activeIndex].selected = false;\r\n    this.activeIndex = newTab.id;\r\n    this.triggerTabChangeEvent(this.activeIndex);\r\n  }\r\n\r\n  triggerTabChangeEvent(index: number = 0) {\r\n    if (this.tabs?.length)\r\n      this.activeTabChangeEvent.emit({ path: this.tabs[index].path, file: this.tabs[index].title});\r\n  }\r\n}\r\n",
            "styleUrl": "./tabs.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div  class=\"tabs-container\">\r\n  <p-tabView (activeIndexChange)=\"triggerTabChangeEvent($event)\"  [(activeIndex)]=\"activeIndex\" id=\"closableTabView\" [scrollable]=\"true\">\r\n    <p-tabPanel *ngFor=\"let tab of tabs\" [selected]=\"tab.selected\" [closable]=\"tab.isClosable\">\r\n        <!-- HEADER -->\r\n        <ng-template  pTemplate=\"header\">\r\n            <div  class=\"flex align-items-center gap-2\">\r\n                    {{tab.title}}\r\n            </div>\r\n        </ng-template>\r\n        <!-- Content  -->\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n</div>\r\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-bf44bf2042da76a5b3670946546c6c1a6ed35c28c096f6fcee3871beecd50843315f7c27415260b0a4ab3065d6ec93a7fcf49973a822f28b53ac40ec79118165",
            "file": "src/app/modules/ui-elements/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "left",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tooltip",
                    "defaultValue": "\"Tooltip is working!!\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "top",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrl: './tooltip.component.scss',\r\n  standalone: true,\r\n  imports: []\r\n})\r\nexport class TooltipComponent {\r\n  tooltip = \"Tooltip is working!!\";\r\n  left:number = 0;\r\n  top:number = 0;\r\n}\r\n",
            "styleUrl": "./tooltip.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"tooltip\"\r\n     [style.left]=\"left + 'px'\" [style.top]=\"top + 'px'\">\r\n  {{tooltip}}\r\n</div>\r\n"
        },
        {
            "name": "WorkpadComponent",
            "id": "component-WorkpadComponent-be4424f352ad031e6ded270d5db31c0d30805ae18b3f3fc753a9edc6083145fcd70d8e402a07187b6bf9576d1124f9e6c98c1205ecc12d9505ad60828123fc4f",
            "file": "src/app/modules/ui-elements/workpad/workpad.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workpad",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./workpad.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "contentFromFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTakes input string from tabs . Which reads data from the file\n",
                    "description": "<p>Takes input string from tabs . Which reads data from the file</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "saveFileEvent",
                    "defaultValue": "new EventEmitter<SaveFileEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "quill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Quill",
                    "optional": false,
                    "description": "<p>Quill Editor object to access the internal apis</p>\n",
                    "line": 36,
                    "rawdescription": "\n\nQuill Editor object to access the internal apis\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Toggle to enable/disable header toolbar</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nToggle to enable/disable header toolbar\n"
                },
                {
                    "name": "supportsQuill",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "getCurrentDraf",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTo emit the current content to the rusty-view to save.\n",
                    "description": "<p>To emit the current content to the rusty-view to save.</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.control.S'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "initializeEditor",
                    "args": [
                        {
                            "name": "event",
                            "type": "EditorInitEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTriggered when the Quill Editor is initialiezed\n",
                    "description": "<p>Triggered when the Quill Editor is initialiezed</p>\n",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EditorInitEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadDataFromFile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoads the data in the workpad form file\n",
                    "description": "<p>Loads the data in the workpad form file</p>\n"
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown.control.S",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTo emit the current content to the rusty-view to save.\n",
                    "description": "<p>To emit the current content to the rusty-view to save.</p>\n",
                    "line": 82
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "EditorModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "NgStyle"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { CommonModule, NgStyle } from '@angular/common';\r\nimport { EditorInitEvent, EditorModule } from 'primeng/editor';\r\nimport { FormsModule } from '@angular/forms';\r\nimport Quill from 'quill';\r\nimport { SaveFileEvent } from '../../utilities/interfaces/Events';\r\nimport { Delta } from 'quill/core';\r\n@Component({\r\n  selector: 'app-workpad',\r\n  standalone: true,\r\n  imports: [CommonModule, EditorModule, FormsModule, NgStyle],\r\n  templateUrl: './workpad.component.html',\r\n  styleUrl: './workpad.component.scss',\r\n})\r\nexport class WorkpadComponent implements OnChanges {\r\n  /**\r\n   * Takes input string from tabs . Which reads data from the file\r\n   */\r\n  @Input('contentFromFile') contentFromFile!: string;\r\n\r\n  @Output() saveFileEvent = new EventEmitter<SaveFileEvent>();\r\n\r\n  supportsQuill: boolean = false;\r\n\r\n  /**\r\n   * Quill Editor object to access the internal apis\r\n   */\r\n  private quill!: Quill;\r\n\r\n  /**\r\n   * Toggle to enable/disable header toolbar\r\n   */\r\n  showHeader: boolean = false;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.loadDataFromFile();\r\n  }\r\n\r\n  /**\r\n   * Triggered when the Quill Editor is initialiezed\r\n   */\r\n  initializeEditor(event: EditorInitEvent) {\r\n    this.quill = event.editor;\r\n    this.loadDataFromFile();\r\n  }\r\n\r\n  /**\r\n   * Loads the data in the workpad form file\r\n   */\r\n  loadDataFromFile() {\r\n    if (this.quill) {\r\n      let delta;\r\n      try {\r\n        delta = new Delta(JSON.parse(this.contentFromFile));\r\n        console.log(\"delta is \", delta, this.contentFromFile);\r\n        \r\n        if( !delta.ops.length ) {\r\n          throw new Error(\"Not a Quill Object \");\r\n        }\r\n        \r\n        this.supportsQuill = true;\r\n        this.quill.setContents(delta);\r\n      } catch (error) {\r\n        this.quill.setText(this.contentFromFile);\r\n        this.supportsQuill = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * To emit the current content to the rusty-view to save.\r\n   */\r\n  @HostListener('document:keydown.control.S')\r\n  getCurrentDraf() {\r\n    if (this.quill) {\r\n      if (this.supportsQuill)\r\n        return this.saveFileEvent.emit({ data: JSON.stringify(this.quill.getContents()) });\r\n      else {\r\n        return this.saveFileEvent.emit({ data: this.quill.getText() });\r\n      }\r\n    }\r\n    return this.saveFileEvent.emit({ data: undefined });\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./workpad.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<p-editor (onInit)=\"initializeEditor($event)\" [spellcheck]=\"false\" class=\"workpad\">\r\n    <ng-template  pTemplate=\"header\">\r\n        <span *ngIf=\"showHeader\" class=\"ql-formats\">\r\n            <button type=\"button\" class=\"ql-bold\" aria-label=\"Bold\"></button>\r\n            <button type=\"button\" class=\"ql-italic\" aria-label=\"Italic\"></button>\r\n            <button type=\"button\" class=\"ql-underline\" aria-label=\"Underline\"></button>\r\n        </span>\r\n    </ng-template>\r\n</p-editor>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-587bb01bf19de91e969da2a313bd0b0390e1bc6c6f912a6a2bb1cea639a3189dd6fff6f1938cd2bf380e99a15557f1f2439f5a11a91008650f383db4e7690c82",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { RustyViewComponent } from './modules/ui-elements/rusty-view/rusty-view.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RustyViewComponent,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RustyViewComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d66c0e3073452a4e998b362c0524606d485dd600521cbaac9f4974777bc5819f86cc3e73e09542012cf90735ce422e91386643b9aa2a8d6aebe791616ab4597e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.routes.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nexport const routes: Routes = [];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "DEFAULT_NODE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/utilities/interfaces/Node.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Node",
                "defaultValue": "{\r\n  name: \"notes\",\r\n  nodes: [],\r\n  isDirectory: false,\r\n  expanded: false,\r\n  path: \".\"\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  prodcution: true,\r\n  current_directory: \"D:\\\\rusty-workspace\\\\\"\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  prodcution: true,\r\n  current_directory: \".\\\\\"\r\n}"
            },
            {
                "name": "NEW_TAB_DEFAULT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/utilities/Constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Tab",
                "defaultValue": "{\r\nid: -1,\r\nisClosable: true,\r\nselected: true,\r\ntitle: \"New Tab\",\r\npath: undefined\r\n}"
            }
        ],
        "functions": [
            {
                "name": "mapFileSystemItem2Node",
                "file": "src/app/modules/utilities/interfaces/Node.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fileSystemItem",
                        "type": "FileSystemItem",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Node",
                "jsdoctags": [
                    {
                        "name": "fileSystemItem",
                        "type": "FileSystemItem",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "path",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "mapFileSystemItem2NodeList",
                "file": "src/app/modules/utilities/interfaces/Node.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fileSystemItem",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "parent_node",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Node[]",
                "jsdoctags": [
                    {
                        "name": "fileSystemItem",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parent_node",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/modules/utilities/interfaces/Node.ts": [
                {
                    "name": "DEFAULT_NODE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/utilities/interfaces/Node.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node",
                    "defaultValue": "{\r\n  name: \"notes\",\r\n  nodes: [],\r\n  isDirectory: false,\r\n  expanded: false,\r\n  path: \".\"\r\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  prodcution: true,\r\n  current_directory: \"D:\\\\rusty-workspace\\\\\"\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  prodcution: true,\r\n  current_directory: \".\\\\\"\r\n}"
                }
            ],
            "src/app/modules/utilities/Constants.ts": [
                {
                    "name": "NEW_TAB_DEFAULT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/utilities/Constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab",
                    "defaultValue": "{\r\nid: -1,\r\nisClosable: true,\r\nselected: true,\r\ntitle: \"New Tab\",\r\npath: undefined\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/modules/utilities/interfaces/Node.ts": [
                {
                    "name": "mapFileSystemItem2Node",
                    "file": "src/app/modules/utilities/interfaces/Node.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fileSystemItem",
                            "type": "FileSystemItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Node",
                    "jsdoctags": [
                        {
                            "name": "fileSystemItem",
                            "type": "FileSystemItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mapFileSystemItem2NodeList",
                    "file": "src/app/modules/utilities/interfaces/Node.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fileSystemItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parent_node",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Node[]",
                    "jsdoctags": [
                        {
                            "name": "fileSystemItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parent_node",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/autofocus/autofocus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/resizer/resizer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ResizerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/tooltip/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/folder-tree/folder-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FolderTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/folder-tree/folder-tree.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FolderTreeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/folder-tree/folder/folder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FolderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/horizontal-bar/horizontal-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HorizontalBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/rusty-view/rusty-vew.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ViewService",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/rusty-view/rusty-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RustyViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/splitter/splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplitterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 45,
                "coverageCount": "5/11",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/ui-elements/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/workpad/workpad.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkpadComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/utilities/Constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEW_TAB_DEFAULT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Events.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OpenFileEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Events.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SaveFileEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Events.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "File",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FileSystemItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Node",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mapFileSystemItem2Node",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "mapFileSystemItem2NodeList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_NODE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Tab.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}