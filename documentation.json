{
    "pipes": [],
    "interfaces": [
        {
            "name": "Node",
            "id": "interface-Node-9f4f886dcbd1794e25e0e1ac0682748177a67d3eea0f4b7754e8e3788c1b622eb3f49b4ec03348eeadc3753f654844ec3bc74244895134dc9382dd21ca574396",
            "file": "src/app/modules/utilities/interfaces/Node.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Node {\r\n    name:string,\r\n    nodes?: Node[]\r\n}",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node[]",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-13e7ffda712bbebb76e1f96901fac886c27ede00fa440da153f1c6bbdacdf95f61385bd25c532f475af1b2017852ebf439ca81835e44cdb6fe48b7c1ffbadf4d",
            "file": "src/app/modules/utilities/interfaces/Tab.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tab{\r\n  id: number;\r\n  content: string;\r\n  title: string;\r\n  isClosable: boolean;\r\n  selected: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isClosable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ExplorerService",
            "id": "injectable-ExplorerService-004b0b7cbf4ce0beb6d1a188397bc886944578146117469e54fa8963e36d177db3848bf30af4b26f3c49fd9df22cfd39acbdedf3795c966d66dc1fa3800cfa7c",
            "file": "src/app/modules/ui-elements/explorer/explorer.service.ts",
            "properties": [
                {
                    "name": "currentDirectories",
                    "defaultValue": "signal<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "listDirectory",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\r\nimport { invoke } from '@tauri-apps/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExplorerService {\r\n\r\n  public currentDirectories = signal<string[]>([])\r\n\r\n  constructor() { }\r\n\r\n  listDirectory(){\r\n    let path = \"D:\\\\OpenSourceSoftware\\\\rusty-notepad\\\\src\\\\app\"\r\n\r\n    invoke<string>(\"read_directory\", { path }).then((response:any) => {\r\n      console.log(\"Current Directories \", response);\r\n      \r\n      this.currentDirectories.set(response)\r\n      console.log(\"signal value is \", this.currentDirectories());\r\n      \r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "AutofocusDirective",
            "id": "directive-AutofocusDirective-91c33ec0a93f41a88fe1ac3e953b558462a71c24e0d1c7adffdc8b408b853a9cc2323236ece4c93d0290523e653b14e7c4b4fe3eef93c3e16a2cea45f129c963",
            "file": "src/app/modules/directives/autofocus/autofocus.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[rustyAutofocus]',\r\n  standalone: true,\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {    \r\n    this.elementRef.nativeElement.focus();\r\n  }\r\n}\r\n",
            "selector": "[rustyAutofocus]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ResizerDirective",
            "id": "directive-ResizerDirective-b877ff0d06c950f50e033ed334c499ae8f181705cb585691cefff27e9291e85011bdcd47038349412717f9535b355e4d9d3c99ff957d0eb1bd18766d63272b09",
            "file": "src/app/modules/directives/resizer/resizer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[workpadResizer]',\r\n  standalone: true\r\n})\r\nexport class ResizerDirective {\r\n\r\n  @HostListener(\"input\") onTextChange(){\r\n    this.resize(this.el.nativeElement);\r\n  }\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  resize(textArea: HTMLTextAreaElement) {\r\n    textArea.style.height = 'auto'\r\n    textArea.style.height = (textArea.scrollHeight) + 'px';\r\n}\r\n\r\n}\r\n",
            "selector": "[workpadResizer]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onTextChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "resize",
                    "args": [
                        {
                            "name": "textArea",
                            "type": "HTMLTextAreaElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "textArea",
                            "type": "HTMLTextAreaElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-ebbb0f557e91379bc0f0ce55f911748c37f885259979ad9e0ee1aab5a0f71b1219624f012bca74e426388579d452b3f06072ee06179843c1d35e84184a549735",
            "file": "src/app/modules/directives/tooltip/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, EmbeddedViewRef, HostListener, Injector, Input } from '@angular/core';\r\nimport { TooltipComponent } from '../../ui-elements/tooltip/tooltip.component';\r\n\r\n@Directive({\r\n  selector: '[tooltip]',\r\n  standalone: true\r\n})\r\nexport class TooltipDirective {\r\n\r\n  @Input() tooltip:string = '';\r\n\r\n  private componentRef: ComponentRef<any> | null = null;\r\n\r\n  constructor(\r\n\tprivate elementRef: ElementRef,\r\n\tprivate appRef: ApplicationRef,\r\n\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\tprivate injector: Injector) {\r\n  }\r\n//  TODO -> good idea -> making the tooltip open on mousehover on text when we have some selected items \r\n  @HostListener('contextmenu')\r\n  onMouseEnter(): void {\r\n    if (this.componentRef === null) {\r\n        const componentFactory =\r\n              this.componentFactoryResolver.resolveComponentFactory(\r\n              TooltipComponent);\r\n        this.componentRef = componentFactory.create(this.injector);\r\n        this.appRef.attachView(this.componentRef.hostView);\r\n        const domElem =\r\n              (this.componentRef.hostView as EmbeddedViewRef<any>)\r\n              .rootNodes[0] as HTMLElement;\r\n        document.body.appendChild(domElem);\r\n        this.setTooltipComponentProperties();\r\n    }\r\n  }\r\n\r\n  private setTooltipComponentProperties() {\r\n    if (this.componentRef !== null) {\r\n      this.componentRef.instance.tooltip = this.tooltip;\r\n      const {left, right, bottom} =\r\n            this.elementRef.nativeElement.getBoundingClientRect();\r\n      this.componentRef.instance.left = (right - left) / 2 + left;\r\n      this.componentRef.instance.top = bottom;\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  onMouseLeave(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.componentRef !== null) {\r\n      this.appRef.detachView(this.componentRef.hostView);\r\n      this.componentRef.destroy();\r\n      this.componentRef = null;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "selector": "[tooltip]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "tooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48
                },
                {
                    "name": "contextmenu",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any> | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "destroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'contextmenu'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setTooltipComponentProperties",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d430f7ce62ca38880296ed26de1236fc07dcfa8c050536b47440e431616e2111a8d7ccd2ac15afccec191d4e685f3e9ce062e3f9ba8faf347ddc329e3916aa41",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { invoke } from '@tauri-apps/api';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n\r\n  \r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-rusty-view ></app-rusty-view>\r\n"
        },
        {
            "name": "ExplorerComponent",
            "id": "component-ExplorerComponent-81a6691fe5f74308112fe7dc10acad1563408007093772872f0e78a826823db95f048586d1b32b2041dd42673012336726da86349e15fef22c2118ebd6d0b166",
            "file": "src/app/modules/ui-elements/explorer/explorer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rusty-explorer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./explorer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "paths",
                    "defaultValue": "computed(() => {\r\n    return this.fs_service.currentDirectories();\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgFor"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed } from '@angular/core';\r\nimport { ExplorerService } from './explorer.service';\r\nimport { CommonModule, NgFor } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'rusty-explorer',\r\n  standalone: true,\r\n  imports: [NgFor],\r\n  templateUrl: './explorer.component.html',\r\n  styleUrl: './explorer.component.scss'\r\n})\r\nexport class ExplorerComponent {\r\n\r\n  paths = computed(() => {\r\n    return this.fs_service.currentDirectories();\r\n  })\r\n\r\n  constructor(private fs_service: ExplorerService ){\r\n    this.fs_service.listDirectory();\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./explorer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fs_service",
                        "type": "ExplorerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "fs_service",
                        "type": "ExplorerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div *ngFor=\"let node of paths()\">\r\n    <p>{{node}}</p>\r\n</div>\r\n"
        },
        {
            "name": "FolderComponent",
            "id": "component-FolderComponent-d57552136e8fcd59089a17cf6bc06e81e5315caf83f9f5bf34f31110c71a84121dcbe01ca05eea173e70efd1d2250bd8aa5111f9b7ecbf3de5078f0966ad168f",
            "file": "src/app/modules/ui-elements/folder-tree/folder/folder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rusty-folder",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./folder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'rusty-folder',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './folder.component.html',\r\n  styleUrl: './folder.component.scss'\r\n})\r\nexport class FolderComponent {\r\n\r\n}\r\n",
            "styleUrl": "./folder.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>folder works!</p>\r\n"
        },
        {
            "name": "FolderTreeComponent",
            "id": "component-FolderTreeComponent-214633f52c681bb4842b8c5d61c90780935aa8b564c697e7a163df49a2c4fc4c60f29ce79396e0fb6a478df461d15847888be433562dc8d9882e5ea3b7cef8ff",
            "file": "src/app/modules/ui-elements/folder-tree/folder-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rusty-folder-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./folder-tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "directory",
                    "defaultValue": "[\r\n    { name: 'Movies', nodes: [{ name: 'Action' }, { name: 'Comedy' }] },\r\n    { name: 'Music', nodes: [{ name: 'Rock' }, { name: 'Classical' }] },\r\n    { name: 'Pictures' },\r\n    { name: 'Documents' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Node[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgFor"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgFor } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { Node } from '../../utilities/interfaces/Node';\r\n\r\n@Component({\r\n  selector: 'rusty-folder-tree',\r\n  standalone: true,\r\n  imports: [NgFor],\r\n  templateUrl: './folder-tree.component.html',\r\n  styleUrl: './folder-tree.component.scss',\r\n})\r\nexport class FolderTreeComponent {\r\n  @Input('directory') dir: Node[] = [\r\n    { name: 'Movies', nodes: [{ name: 'Action' }, { name: 'Comedy' }] },\r\n    { name: 'Music', nodes: [{ name: 'Rock' }, { name: 'Classical' }] },\r\n    { name: 'Pictures' },\r\n    { name: 'Documents' },\r\n  ];\r\n}\r\n",
            "styleUrl": "./folder-tree.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"p-8 max-w-full mx-auto\">\r\n  <ul>\r\n    <li class=\"my-1\">\r\n      <span class=\"flex items-center gap-1\">\r\n        <i class=\"pi pi-folder\"></i> Home\r\n      </span>\r\n\r\n      <ul class=\"pl-4 subFolders\">\r\n        <li class=\"my-1\" *ngFor=\"let folder of dir\">\r\n          <span class=\"flex items-center gap-1\">\r\n            <i class=\"pi pi-folder\"></i> {{ folder.name }}\r\n          </span>\r\n          <ul class=\"pl-4 subFolders\">\r\n            <li class=\"my-1\" *ngFor=\"let folder of folder.nodes\">\r\n              <span class=\"flex items-center gap-1\">\r\n                <i class=\"pi pi-folder\"></i> {{ folder.name}}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "HorizontalBarComponent",
            "id": "component-HorizontalBarComponent-275481caf51eda8750c4c686c6a57df06c1684422cba1a7fe64d29beb4c0b1172a7b23c4290b2d7893e8451719351062b9170a76faf8a463f71f5d0b84c6b588",
            "file": "src/app/modules/ui-elements/horizontal-bar/horizontal-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-horizontal-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./horizontal-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-horizontal-bar',\r\n  templateUrl: './horizontal-bar.component.html',\r\n  styleUrl: './horizontal-bar.component.scss',\r\n  standalone: true,\r\n  imports: []\r\n})\r\nexport class HorizontalBarComponent {\r\n\r\n}\r\n",
            "styleUrl": "./horizontal-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"h-2rem w-full px-2\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n  <div class=\"inline-flex\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <p class=\"break-line\"></p>\r\n</div>\r\n"
        },
        {
            "name": "RustyViewComponent",
            "id": "component-RustyViewComponent-cb86f09564daa026c6ba8bc369e51cc8b566f25f97e5295d68c071b50a6ec9a596204eaa04932168a3785c455ceff9125cc794b421f7b29f683b8505a7dcec19",
            "file": "src/app/modules/ui-elements/rusty-view/rusty-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rusty-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./rusty-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dummyData",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    selected: true,\r\n    isClosable: true,\r\n    content:\r\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim \\\r\n      ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat. \\\r\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \\\r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    title: 'Tab 1',\r\n  },\r\n  {\r\n    id: 2,\r\n    selected: false,\r\n    isClosable: true,\r\n    content: 'ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat. \\\r\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \\\r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    title: 'Tab 2',\r\n  },\r\n  {\r\n    id: 3,\r\n    selected: false,\r\n    isClosable: true,\r\n    content:\r\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim \\\r\n      ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat.',\r\n    title: 'Tab 3',\r\n  },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "workfile",
                    "defaultValue": "\"This is some default work from an file\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "updateWorkpad",
                    "args": [
                        {
                            "name": "event",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TabsComponent",
                    "type": "component"
                },
                {
                    "name": "WorkpadComponent",
                    "type": "component"
                },
                {
                    "name": "SplitterComponent",
                    "type": "component"
                },
                {
                    "name": "ExplorerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { TabsComponent } from \"../tabs/tabs.component\";\r\nimport { WorkpadComponent } from '../workpad/workpad.component';\r\nimport { Tab } from '../../utilities/interfaces/Tab';\r\nimport { SplitterComponent } from \"../splitter/splitter.component\";\r\nimport { ExplorerComponent } from '../explorer/explorer.component';\r\n\r\n@Component({\r\n  selector: 'app-rusty-view',\r\n  templateUrl: './rusty-view.component.html',\r\n  styleUrl: './rusty-view.component.scss',\r\n  standalone: true,\r\n  imports: [TabsComponent, WorkpadComponent, SplitterComponent, ExplorerComponent]\r\n})\r\nexport class RustyViewComponent {\r\n\r\n\r\ndummyData: Tab[] =  [\r\n  {\r\n    id: 1,\r\n    selected: true,\r\n    isClosable: true,\r\n    content:\r\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim \\\r\n      ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat. \\\r\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \\\r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    title: 'Tab 1',\r\n  },\r\n  {\r\n    id: 2,\r\n    selected: false,\r\n    isClosable: true,\r\n    content: 'ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat. \\\r\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \\\r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    title: 'Tab 2',\r\n  },\r\n  {\r\n    id: 3,\r\n    selected: false,\r\n    isClosable: true,\r\n    content:\r\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim \\\r\n      ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod consequat.',\r\n    title: 'Tab 3',\r\n  },\r\n];\r\n\r\nworkfile: string = \"This is some default work from an file\";\r\n\r\nupdateWorkpad(event: Tab) {\r\n  this.workfile = event.content;\r\n}\r\n\r\n}\r\n",
            "styleUrl": "./rusty-view.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"layout h-full\">\r\n  <!--  Add a Folders option on left side  -->\r\n  <app-splitter class=\"h-full\">\r\n    <div >\r\n      <rusty-explorer></rusty-explorer>\r\n    </div>\r\n    <app-tabs panel2 (activeTabChangeEvent)=\"updateWorkpad($event)\"  [tabs]=\"dummyData\"></app-tabs>\r\n    <app-workpad panel2 [contentFromFile]=\"workfile\"></app-workpad>\r\n\r\n  </app-splitter>\r\n</div>\r\n"
        },
        {
            "name": "SplitterComponent",
            "id": "component-SplitterComponent-221be0fca16fa2221fe4135779960f588de9a5c8a805b098a7580af51fc8862d6ba250cdf9d1b585419f3bb5476d66a451d8000c92f3cf01b7ea4d3a383f2a7e",
            "file": "src/app/modules/ui-elements/splitter/splitter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./splitter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SplitterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SplitterModule } from 'primeng/splitter';\r\n@Component({\r\n  selector: 'app-splitter',\r\n  templateUrl: './splitter.component.html',\r\n  styleUrl: './splitter.component.scss',\r\n  standalone: true,\r\n  imports: [SplitterModule]\r\n})\r\nexport class SplitterComponent {\r\n}\r\n",
            "styleUrl": "./splitter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-splitter\r\n    [panelSizes]=\"[25, 75]\"\r\n    [minSizes]=\"[1, 20]\"\r\n    [style]=\"{ border: 'none', height: '100%' }\"\r\n    styleClass=\"mb-5\">\r\n    <ng-template pTemplate>\r\n        <div >\r\n           <ng-content ></ng-content>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate>\r\n        <div [style]=\"{padding:'var(--padding-xs)'}\" class=\"col \">\r\n           <ng-content select=\"[panel2]\"></ng-content>\r\n        </div>\r\n    </ng-template>\r\n</p-splitter>\r\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-dc2772efc1d02a010225cad85faf39099109c3ee4fb40bed97db9a183df21f08d4acaacd937a083baf101dfd66d039a15920a696325144689890743c2ffc41ad",
            "file": "src/app/modules/ui-elements/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis takes a list of tabs from the service which reads all the files\n",
                    "description": "<p>This takes a list of tabs from the service which reads all the files</p>\n",
                    "line": 27,
                    "type": "Tab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeTabChangeEvent",
                    "defaultValue": "new  EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>This is use to toggle active tab on Ctrl + Tab event</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nThis is use to toggle active tab on Ctrl + Tab event\n",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSwitch to next Tab on control + tab event\n",
                    "description": "<p>Switch to next Tab on control + tab event</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.control.tab'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "newTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNew Tab on Ctrl + N\n",
                    "description": "<p>New Tab on Ctrl + N</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.control.N'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "triggerTabChangeEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown.control.N",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNew Tab on Ctrl + N\n",
                    "description": "<p>New Tab on Ctrl + N</p>\n",
                    "line": 46
                },
                {
                    "name": "document:keydown.control.tab",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSwitch to next Tab on control + tab event\n",
                    "description": "<p>Switch to next Tab on control + tab event</p>\n",
                    "line": 37
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TabViewModule",
                    "type": "module"
                },
                {
                    "name": "WorkpadComponent",
                    "type": "component"
                },
                {
                    "name": "NgFor"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CommonModule, NgFor} from '@angular/common';\r\nimport { WorkpadComponent } from '../workpad/workpad.component';\r\nimport { Tab } from '../../utilities/interfaces/Tab';\r\nimport { NEW_TAB_DEFAULT } from '../../utilities/Constants';\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrl: './tabs.component.scss',\r\n  standalone: true,\r\n  imports: [CommonModule, TabViewModule, WorkpadComponent, NgFor],\r\n})\r\nexport class TabsComponent implements OnInit {\r\n\r\n\r\n  @Output() activeTabChangeEvent = new  EventEmitter<Tab>();\r\n\r\n  /**\r\n   * This is use to toggle active tab on Ctrl + Tab event \r\n   */\r\n  public activeIndex: number = 0;\r\n\r\n  /**\r\n   * This takes a list of tabs from the service which reads all the files \r\n   */\r\n  @Input(\"tabs\") tabs!: Tab[] \r\n\r\n  ngOnInit(): void {\r\n    this.triggerTabChangeEvent();\r\n  }\r\n\r\n  /**\r\n   * Switch to next Tab on control + tab event \r\n   */\r\n  @HostListener(\"document:keydown.control.tab\")\r\n  changeTab() {\r\n    this.activeIndex = (this.activeIndex + 1) % this.tabs.length;\r\n    this.triggerTabChangeEvent();\r\n  }\r\n\r\n  /**\r\n   * New Tab on Ctrl + N \r\n   */\r\n  @HostListener(\"document:keydown.control.N\")\r\n  newTab() {\r\n    let newTab: Tab = {...NEW_TAB_DEFAULT , id: this.tabs.length }\r\n    this.tabs.push(newTab)\r\n    this.tabs[this.activeIndex].selected = false \r\n    this.activeIndex = newTab.id ;\r\n    this.triggerTabChangeEvent();\r\n  }\r\n\r\n  triggerTabChangeEvent(){\r\n    if(this.tabs?.length)\r\n      this.activeTabChangeEvent.emit(this.tabs[this.activeIndex]);\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./tabs.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div  class=\"tabs-container\">\r\n  <p-tabView  [(activeIndex)]=\"activeIndex\" id=\"closableTabView\" [scrollable]=\"true\">\r\n    <p-tabPanel  *ngFor=\"let tab of tabs\" [selected]=\"tab.selected\" [closable]=\"tab.isClosable\">\r\n        <!-- HEADER -->\r\n        <ng-template  pTemplate=\"header\">\r\n            <div  class=\"flex align-items-center gap-2\">\r\n                    {{tab.title}}\r\n            </div>\r\n        </ng-template>\r\n        <!-- Content  -->\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n</div>\r\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-bf44bf2042da76a5b3670946546c6c1a6ed35c28c096f6fcee3871beecd50843315f7c27415260b0a4ab3065d6ec93a7fcf49973a822f28b53ac40ec79118165",
            "file": "src/app/modules/ui-elements/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "left",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tooltip",
                    "defaultValue": "\"Tooltip is working!!\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "top",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrl: './tooltip.component.scss',\r\n  standalone: true,\r\n  imports: []\r\n})\r\nexport class TooltipComponent {\r\n  tooltip = \"Tooltip is working!!\";\r\n  left:number = 0;\r\n  top:number = 0;\r\n}\r\n",
            "styleUrl": "./tooltip.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"tooltip\"\r\n     [style.left]=\"left + 'px'\" [style.top]=\"top + 'px'\">\r\n  {{tooltip}}\r\n</div>\r\n"
        },
        {
            "name": "WorkpadComponent",
            "id": "component-WorkpadComponent-381fceede8a91eda3374390b0e960a9bf5a998aab2efef06d7862d45eab6eaff85c721f1a4a94d05ad746c10dd10cf1d802d732b4bf4b776abff691c5a258e41",
            "file": "src/app/modules/ui-elements/workpad/workpad.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workpad",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./workpad.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "contentFromFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTakes input string from tabs . Which reads data from the file\n",
                    "description": "<p>Takes input string from tabs . Which reads data from the file</p>\n",
                    "line": 22,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showHeader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "work",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Current draft work in progress</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nCurrent draft work in progress\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "EditorModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FormsModule } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-workpad',\r\n  standalone: true,\r\n  imports: [CommonModule, EditorModule, FormsModule],\r\n  templateUrl: './workpad.component.html',\r\n  styleUrl: './workpad.component.scss',\r\n})\r\nexport class WorkpadComponent implements OnInit, OnChanges {\r\n  /**\r\n   * Takes input string from tabs . Which reads data from the file\r\n   */\r\n  @Input('contentFromFile') contentFromFile: string | undefined;\r\n\r\n  /**\r\n   * Current draft work in progress\r\n   */\r\n  work: string = '';\r\n\r\n  showHeader: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    if (this.contentFromFile) this.work = this.contentFromFile;\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.work = changes['contentFromFile'].currentValue;\r\n  }\r\n}\r\n",
            "styleUrl": "./workpad.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<p-editor [(ngModel)]=\"work\" class=\"workpad\">\r\n    <ng-template  pTemplate=\"header\">\r\n        <span *ngIf=\"showHeader\" class=\"ql-formats\">\r\n            <button type=\"button\" class=\"ql-bold\" aria-label=\"Bold\"></button>\r\n            <button type=\"button\" class=\"ql-italic\" aria-label=\"Italic\"></button>\r\n            <button type=\"button\" class=\"ql-underline\" aria-label=\"Underline\"></button>\r\n        </span>\r\n    </ng-template>\r\n</p-editor>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-587bb01bf19de91e969da2a313bd0b0390e1bc6c6f912a6a2bb1cea639a3189dd6fff6f1938cd2bf380e99a15557f1f2439f5a11a91008650f383db4e7690c82",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { RustyViewComponent } from './modules/ui-elements/rusty-view/rusty-view.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RustyViewComponent,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RustyViewComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d66c0e3073452a4e998b362c0524606d485dd600521cbaac9f4974777bc5819f86cc3e73e09542012cf90735ce422e91386643b9aa2a8d6aebe791616ab4597e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.routes.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nexport const routes: Routes = [];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "NEW_TAB_DEFAULT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/utilities/Constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Tab",
                "defaultValue": "{\r\ncontent : \"Happy Taking notes\",\r\nid: -1,\r\nisClosable: true,\r\nselected: true,\r\ntitle: \"New Tab\"\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/modules/utilities/Constants.ts": [
                {
                    "name": "NEW_TAB_DEFAULT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/utilities/Constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab",
                    "defaultValue": "{\r\ncontent : \"Happy Taking notes\",\r\nid: -1,\r\nisClosable: true,\r\nselected: true,\r\ntitle: \"New Tab\"\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/autofocus/autofocus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/resizer/resizer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ResizerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/directives/tooltip/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/explorer/explorer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExplorerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/explorer/explorer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ExplorerService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/folder-tree/folder-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FolderTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/folder-tree/folder/folder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FolderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/horizontal-bar/horizontal-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HorizontalBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/rusty-view/rusty-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RustyViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/splitter/splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplitterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/ui-elements/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/ui-elements/workpad/workpad.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkpadComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/utilities/Constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NEW_TAB_DEFAULT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Node.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Node",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/utilities/interfaces/Tab.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            }
        ]
    }
}